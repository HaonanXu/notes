Problem: Given a log of data events, i.e., create, update, and delete of k-v maps. Answer the following question in a streaming way, i.e.,
stats should update real time as more data comes

    1. In the last 30 mins, how many entries are added

    2. In this hour, up to this minute, how many entries are added

Subproblem: log compaction within window
------
When we see a new data event, if it is not create event, we need to somehow combine it with the exiting data items to reflect the true state
of data

This means we need to use updateStateByKey: if has previousState, we merge, otherwise, the data has expired, we will return None. Note that
when we update, we need to check the time as well, to determine if the data has fallen out of the range.


Subproblem: where to put the windowed stream
------
If we use windowed stream directly on top of updateStateByKey, one potential problem is that, if we keep having updating event, since uSBK
creates a new state RDD, the original event will remain active as part of the most recent RDD, and will not expire


Subproblem: counting and summing
-----
use reduceByKey, or for summing, just use reduce
