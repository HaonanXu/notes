Ability to commit a set of messages across TopicParittions as a unit: either all messages are commited, or none of them are => to enable
exactly once processing in Kafka Streams => includes input msg, updates to the local state store, and the output messaes, incluidng input
offsets in a transcations => Producer need sendOffsets

Often have 10 stages deep, why they need speculative applications => read uncommited

New APIs proposed:

initTransactions:
1. ensure transations inited by previous instance of the producer are competed. If the prevoius isntance had failed with a transaction in
progress, abort
2.Get the interal producer id and epoch

* Sends a list of consumed offsets to the consumer group coordinator, and also marks
* those offsets as part of the current transaction. These offsets will be considered
* consumed only if the transaction is committed successfully.
void sendOffsetsToTransaction(Map<TopicPartition, OffsetAndMetadata> offsets,
                                String consumerGroupId) throws ProducerFencedException;

 * Send the given record asynchronously and return a future which will eventually contain the response information.

producer.initTransactions();

------------

idempotent producer




