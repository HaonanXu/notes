For the base/invalid case, the common pattern is for each dimension, you have a base case. Moreover, the base case/invalid case, the check
should happen BEFORE triggered the cache check (would bottom up be better in this case than top down?)

To reduce space complexity and sometimes runtime complexity, we often look "up" and "left" at the same time, instead of only looking "left", which is often more expensive

No obvious way to identify the proper state to keep track of. In this case, we can use the following strategy:
```
1. we focus on actions, starting from base case, and see what states are changed during such actions during such actions.

2. For such hard problem, where we don't even know how to start. Don't worry about final run time constraint right now. Let's fix a solid state and solve it naively, and see if we can use any DS/insight to speed it up
```

