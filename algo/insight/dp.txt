For the base/invalid case, the common pattern is for each dimension, you have a base case. Moreover, the base case/invalid case, the check
should happen BEFORE triggered the cache check (would bottom up be better in this case than top down?)

To reduce space complexity and sometimes runtime complexity, we often look "up" and "left" at the same time, instead of only looking "left", which is often more expensive

-----------

Bottom-up vs top-down

top-down/memoization approach is easier to reason, however, compared to bottom-up, it has a few disadvantaged

1. need to store a special value to mark "unvisited" stage. For bottom-up, as long we satifies the depdendeny, such thing is unneeded at all

2. stack may overflow due to the recursion
