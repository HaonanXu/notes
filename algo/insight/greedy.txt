1. makes locally optimal choice at each step
=> the "each step" part strongly resembles DP. In fact, greedy is a viable option at each state of DP. However, it is also easy to ignore the fact that "globally optimal" doesnt not lead to "locally optimal": greedy is the other way around! 
The tricky part, therefore, is what is the step/state information we need to capture?

2. Often used as part of solution

4. by nature, greedy problems are decomposable, but need to define "step" carefully, i.e., step is the dual of "locally optimally solution"

5.One way to prove greedy is that each change toward the greedy solution only improves the final score, until we converge to the greedy
version we claim. This "gradual" improvement pattern can be seen in a lot non-greedy problems as well,i.e., iterative methods

---------

O*: optimal solution => unknown at this moment
G: greedy solution

and then proof by contradiction, may be in many different steps => at least probing the optimal solution properties gives SOME properties,
even if greedy itself is not enough, => if the optimal solution is different, it can't be optimal, in each case => may get a solution as
same cost as the greedy solution
