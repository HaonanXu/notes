makes locally optimal choice at each step
=> the "each step" part strongly resembles DP. In fact, a lot of "greedy" solution should be solved in DP and vice versa!. 

=> if we find a decompositon that locally optimal => globally optimal, then probably we can force a greedy approach by proving that we can find a solution s.t. all locally optimal points can be reached at the SAME time in our solution => here we see a level of "independence" among greedy decomposed steps

One way to prove greedy is that each change toward the greedy solution only improves the final score, until we converge to the greedy
version we claim. This "gradual" improvement pattern can be seen in a lot non-greedy problems as well,i.e., iterative methods

Since greedy solution, by nature, is "optimal" and closely associated withe extreme value, we can even add more extreme values, e.g., the
extreme case of all optimal solutions, or locally optimal instead of global optimal. The intention is that the addition of this extreme case, introduces additional condictions which
makes proof and code easier by limiting all possible options to only 1

Another common insight is to preserve the flexibility , pick the one least flexible in terms of interacting with future steps if such
interaction can ever happen, otherwise, we just need to show current interactive already gives us the best
