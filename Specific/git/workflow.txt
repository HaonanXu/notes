git flow setup

1. A central truth repo - origin
origin/master: production-ready code. A git hook could be on this to build and roll-out
origin/develop: integration branch + nightly build. latest delivered dev changes for the next release

2.Feature branch
developer repo only. from and to develop
use --no-ff flag in merge and rebase to keep feature branch info. Making revert easier

3.release branch
from develop,to develop and master
minor bug fixes and preparing meta-data for release
branchs off when dev branch has almost the final state, but no features from future releases. Bug fixes goes to release instead of development

 This is also the time release gets a version number,i.e.,

git checkout -b release-1.2 develop
./bump-version.sh 1.2
git commit -a -m "Bumped version number to 1.2"

When it is truly ready. release merged into master. tag master. changes made on the release branch need to be merged back to develop

git merge --no-ff release-1.2
git tag -a 1.2

We can delete the release branch after we have done all steps

4.hotfix branch
from master, to develop and master
similar to release, also need to bump version number after branching off
when a release branch exists, the hotfix changes need to be merged into that release branch, instead of develop


