why is user/pw/session model not ideal for mobile
-------
OAuth: create a key and hand off to a specific app, and will give app partial access to account
-finer control of resources
-remove access to individual apps
-change pass w/o revoke access to apps
-doesnt require user/pass to app
--------
Architecture
Resource Server
Authorization Server
Client: get access to RS
Resource Ower: User

Dynamics:
1. User gives name/pw to client
2. Client posts to AS for token /oauth/token, in the request body with name, pw, client id, grant type (=password), scopes: set of resources we want access

client authenticates itself in http basic, as per protocol required. 
(client_id and empty string in untrusted client case)

Authentication:Basic {username:password encoded}

3. SA returns token to client
4. POST /video with Autherization header in request
Authorization: Bearer {token we received}
5. AS will check the token and request to decide access
-----

When client and service are built by us

1. client sents password grant to AS
2. AS returns token to client
3. Use the token to go through token and access RS

AS is a controller in sprint security
spring filter checks token
controllers can have security resitrction based on oauth
---------

IaaS vs PaaS

