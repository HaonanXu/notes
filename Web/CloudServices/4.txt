Retrofit: client side, create strong interface in java for your cloud service

in Java: 
public interface VideoSvc{

@GET("/video")
	public String getVideo();

@FromUrlEncoded
@POST("/video")
	public boolean addVideo(
@Field("name")
string name, 
@Field("uri")
string url, 
@field("duration")
long duration);
}

RestAdapter adept = new RestAdapter.Builder().setEndPoint("http://localhost").build();
VideoSvc svc = adapt.create(VideoSvc.class)
String videos = svc.getVideos();

svc.addVideo("name", "...", 20);

----------
public interface VideoSvcApi
{

	@POST("/video")
	public boolean addVideo(@Body Video v);
}

controller implements the VideoSvcApi
------

@Controller

public class VideoSvc{
	
@AutoWired
	private StroageSystem storage;

@AutoWired
private UserManager users_;

}

@EnableAutoConfiguration //go look for @Autowired
@ComponentScan({"com.mobile.video.controller"})//have all the implementations, but only one interface
@Configuration
public class VideoConf{
	
	@Bean
	public StorageSystem storageSystem()
{
	return new LocalStorage();//
}
//or @EnableJpaRepositorires(basePackageClases = VideoRepostiory.class)

}

---------
Application provides implemetntion at run time

--------
JPA: persistence API

@Entity
public class Video
{
	@id
@generatedValue(strategy=generationtype.auto)
	private long id;
	private string name;
}
--------
@Repository
public interface VideoRepo extends CrudRepository<Video, Long>
{
public List<Video> findByName(String name); //find, by, name means special things
public List<Video> findByNameAndCategory(String name, String cat);//and means 




}
---------	
