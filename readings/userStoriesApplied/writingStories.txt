try not to include dependency between stories

When as much detail is added , the dicussions abou the story ar emuch morelikely to feel concrete and real. This can lead to the mistaken belief that the story reflects all details

details that been determined through conversations become tests

many stories are evaluated by purchasers than users

variate tech-dev focused term into true user-story,i.e., user-value

if dev does not have the tech knowledge, spend timeboxes spike time as a story to estimate

if dev does not have the domain knowledge, talk to the user to figure out

Put the spike in a different iteration

Bug reports and user interface changes often are too small for a story => combine them to a bigger one

responsible for helping the customer write stories that are promises to converse rather than detailed specifications

---------
2.1
a. No. Unable to test it

b. that story alone is too small. Either a) add and edit address info or b) group that into a edit resume story

c. that is an epic, add/edit/delete alone is a story

d. (!)good story, but probably needs a rewrite if developer is missing domain knowledge

e. (!)good end user impact

2.2
(!)
A user can make an automated job search agent.
A user can edit the search parameters of an automated job search agent.
A user can change the times when an automated job search agent will run.
A user can change how the results of an automated job search agent will be reported.
