Implementation example

Zookeeper recipe
------
each member creates a sequential, ephemeral child node
lowest sequential # is the leader
each one watches the next lowest sequence # to its own

Comment: the state of leader should be WALed, so that the new leader can recover from that, with the help of checkpoint to speed up
recovery.

One important reason this could work is that ZK guarantees notification comes before new leader makes any changes

GFS
------
The chuck leader maintains the master lease, the master knows when leases are granted, so it has knoweledge as to when to grant a new
one

To defend against fail-restart errors, master increases the chunk version number and informs the up-to-date replicats

Client uses DNS name of master so that when master failed, we can point it to the new ip

Chubby
-----
To become a coordinator: have a # higher than current one and send to all replicas, the vote passes when it gets majority votes. The master
# also helps defend against fail-restart previous masters

repliaces gives lease to the master of the previous Paxos instances and will refuse process any Paxos message

master's timeout is shorter than the lease, to prevent against clock shift


Paxos
-----
Current set of servers is part of the Paxos state and will be changed with state change command

Kafka
------
For each topic's partions, ZK has
/brokers/topics/[topic]/partitions/[partitionId]/state

This ZK node stores leader and leader_epoch. This leader is similar to the leader replica in GFS

The controller is similar to GFS's master, and thus maintains controller and controller_epoch
