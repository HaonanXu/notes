in-memory test doubles: artifact has to be altered for testing purposes so to have a test mode => can use dependency injection to achieve
this

integration test: verify moduel can coomuniate sufficiently rather than to acceptance test the xternal component => gateway integration
test, persistant integration test => whilte only a handful of integartion tests to provde fast feedback when needed and provide additonal
coverage with unit test and contract test

use internal resources for test double to return predefined responses. Can also be used to emulate unhappy pathes through component,e.g.,
slow or malformed responses
=>routing all request through privileges internal resoruces

typically exposed internal resources: logs, feature flags, db commands, and metrics

out of process component tests=>stub external service

contract testing is not component testing => contract test suites written by each consumering team are runanble in the build pipelines for
the producing services => check framework

probably still need some stub for end-to-end testing => write as few end-to-end as possible, time budget should be in the order of minutes
use DSL to express user journeys => total end-to-end coverage is traded in favour of reliability in the suite
make test data-independent: build a reproducable world view

fake users exerciinsg real ranscations against the prod system=> avoid e-to-e , and use thougough producito monitoring and testing direclty
against prod


