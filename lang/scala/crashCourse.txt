Build and run:
simple compiling, use of sbt

Patern matching:
nested pattern matching

Compound types:
compare trait with ML's signature

Generics:
Compare with alpha type in ML

Nested functions:
compare with various let operators in ML

currying
What is the type of curried/parital applied function

lambda and higher-order functions

Type inference:
local parameter type, function return type

invariance, covariance, and contravariance

------

//notice the var and potentially val used in ctor, a field will be generated and access that way
class ShoppingCart(var maximumItems:Int) extends ItemContainer {
  ...
  maximumItems = if (maximumItems < 10) 10 else maximumItems
}

return statement usage is discouraged

:+ operator for var of immutables

The Scala compiler looks to see whether there is, within the current code context, a declaration of an implicit val someName: ActorRef. 

You donâ€™t even have to use the new keyword to create a new instance of a case class. 

val evenNumbers =
 for {
  number <- numbers
  if number % 2 == 0
 } yield number


