A:
(HARD)
One way is to generate many permutations, check its distribution of "scores"

Why is standard algo good? i has 1/n chance to be on each position j

proof:
1st element: trivial proof
2nd element: Pr(2 at 1) = 1/N, other case (1 - (1/N)) * 1/N-1 = 1/N
3rd element: Pr(3 at 1) = 1/N, Pr(3 at 2) = Pr(2 at 3) = 1/N //induciton here....

Why is "swap with all" bad? 
The difference is that at each step, we can swap with previous index, compared to the perfect approach, the means j is more likley to be swapped under j => how to build a score function

another approach: naive bayes classifier
P(GOOD|S)
