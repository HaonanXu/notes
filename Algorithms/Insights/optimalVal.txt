One way to prove is the show we can improve the step by changing the solution in the direction of our step, i.e., similar to the replacement
proof in greedy. A concrete example will be gradient descent

similarly, we can do step-wise, gradient descent-like optimization, i.e., each step will only be better, will never get worse (start from
potentially worst possible state). total # of steps will be bounded by the dimension of data.=> even a while loop would do


---
In DP/state like cases, we will need to compare all potential candidates to find the best


