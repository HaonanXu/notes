1.direct apporach: bitset/simple dictionary but implementation is often too slow, due to the 2^n number of subsets. However, since small exhaustive search is feasible, it might lead a way to "fix" one dimension of multi-dimension problem

To test all subsets for a set of size n

int all = 1 << n; then for each set in [0, all)


2. we either have to work with set INDIRECTLY => keep tracking of properties without knowing the exact content in set
	or need a reduction on insight so we no longer deal with set direclty, often, this means deals the content of set organized in a continous way instead of holed way.

3.Because set has the commutativity property, all commutatitivy insight can be used.

4.A common indirect approach is the compute the complement of current set/problem space
,e.g, Pr(max number in collection > i) = 1 - Pr(all number in colleciton <= i). max addition = total - mindeletion. This can make computation a lot easier
